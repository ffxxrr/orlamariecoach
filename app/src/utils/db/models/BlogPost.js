import mongoose from 'mongoose';

const blogPostSchema = new mongoose.Schema({
  title: {
    type: String,
    required: true,
    trim: true,
  },
  slug: { // Adding a slug field, useful for URLs, generated from title via pre-save hook
    type: String,
    // required: true, // Removed: Slug is generated by pre-save hook, validation runs before hook
    unique: true,
    trim: true,
    lowercase: true,
  },
  description: {
    type: String,
    required: true,
    trim: true,
  },
  content: { // Adding a field for the main blog content (Markdown or HTML)
    type: String,
    required: true,
  },
  pubDate: {
    type: Date,
    required: true,
    default: Date.now,
  },
  updatedDate: { // Adding an updated date field
    type: Date,
    default: Date.now,
  },
  image: { // URL or path to the featured image
    type: String,
    trim: true,
  },
  category: {
    type: String,
    required: true,
    trim: true,
  },
  tags: [{ // Adding tags for better categorization
    type: String,
    trim: true,
  }],
  featured: {
    type: Boolean,
    default: false,
  },
  // You might add author, status (draft/published), etc. later
}, {
  timestamps: { createdAt: 'pubDate', updatedAt: 'updatedDate' } // Use Mongoose timestamps
});

// Add pre-save hook to generate slug from title if it doesn't exist or title changed
blogPostSchema.pre('save', function(next) {
  // Generate slug if title is modified OR if it's a new document without a slug
  if (this.isModified('title') || (this.isNew && this.title && !this.slug)) {
    if (this.title) { // Ensure title exists before trying to generate slug
        this.slug = this.title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '');
    } else {
        // Handle case where title is somehow missing (though it's required)
        // Maybe return an error or set a default slug? For now, log and proceed.
        console.warn('BlogPost pre-save hook: Title is missing, cannot generate slug.');
    }
  }
  // Mongoose timestamps option handles updating 'updatedDate' automatically.
  next();
});

// Avoid recompiling the model if it already exists
const BlogPost = mongoose.models.BlogPost || mongoose.model('BlogPost', blogPostSchema);

export default BlogPost;
