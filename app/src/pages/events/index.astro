---
import MainLayout from '../../layouts/MainLayout.astro';
import { connectToDatabase } from '../../utils/db/connect';
import Event from '../../utils/db/models/Event';

// Fetch upcoming events from the database, sorted by date ascending
let upcomingEvents = [];
let pastEvents = [];
let fetchError = null;
try {
  await connectToDatabase();
  const now = new Date();
  upcomingEvents = await Event.find({ date: { $gte: now } }).sort({ date: 1 }).lean(); // Fetch upcoming
  pastEvents = await Event.find({ date: { $lt: now } }).sort({ date: -1 }).limit(5).lean(); // Fetch recent past (limit 5)
} catch (error) {
  console.error("Error fetching public events:", error);
  fetchError = "Could not load events at this time.";
}

// Format date for display
function formatDate(dateString) {
  if (!dateString) return 'N/A';
  try {
    return new Date(dateString).toLocaleDateString('en-US', { // Use US format for broader familiarity or choose locale
      year: 'numeric', month: 'long', day: 'numeric'
    });
  } catch (e) {
    return 'Invalid Date';
  }
}

// Format time for display
function formatTime(dateString) {
    if (!dateString) return '';
    try {
        return new Date(dateString).toLocaleTimeString('en-US', {
            hour: 'numeric', minute: '2-digit', hour12: true
        });
    } catch (e) {
        return '';
    }
}

// Helper to truncate description
function truncate(str, num) {
  if (!str) return '';
  if (str.length <= num) {
    return str;
  }
  return str.slice(0, num) + '...';
}
---

<MainLayout title="Upcoming Events - OrlaMarie Coach">
  <section class="py-12 md:py-20 bg-white dark:bg-gray-900">
    <div class="container mx-auto px-4">
      <h1 class="text-3xl md:text-4xl font-bold text-center text-gray-900 dark:text-white mb-10">
        Upcoming Events
      </h1>

      {fetchError && (
        <p class="text-center text-red-600 dark:text-red-400">{fetchError}</p>
      )}

      {!fetchError && upcomingEvents.length === 0 && (
        <p class="text-center text-gray-600 dark:text-gray-400">
          No upcoming events scheduled at the moment. Check back soon!
        </p>
      )}

      {!fetchError && upcomingEvents.length > 0 && (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {upcomingEvents.map(event => (
            <div class="bg-gray-50 dark:bg-gray-800 rounded-lg shadow-md overflow-hidden border border-gray-200 dark:border-gray-700 flex flex-col">
              {event.image && (
                <a href={`/events/${event.slug}`}>
                  <img src={event.image} alt={event.name} class="w-full h-48 object-cover" loading="lazy"/>
                </a>
              )}
              <div class="p-6 flex flex-col flex-grow">
                <span class="text-sm font-semibold text-blue-600 dark:text-blue-400 mb-1">{event.type}</span>
                <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                  <a href={`/events/${event.slug}`} class="hover:text-blue-700 dark:hover:text-blue-500 transition duration-300">
                    {event.name}
                  </a>
                </h2>
                <div class="text-sm text-gray-600 dark:text-gray-400 mb-3 space-y-1">
                   <p><span class="font-medium">Date:</span> {formatDate(event.date)} at {formatTime(event.date)}</p>
                   <p><span class="font-medium">Location:</span> {event.location}</p>
                </div>
                <p class="text-gray-700 dark:text-gray-300 text-sm mb-4 flex-grow">
                  {truncate(event.description, 120)}
                </p>
                <a href={`/events/${event.slug}`} class="mt-auto inline-block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 transition duration-300">
                  Learn More & Register
                </a>
              </div>
            </div>
          ))}
        </div>
      )}

      <!-- Optional: Section for Past Events -->
      {pastEvents.length > 0 && (
        <div class="mt-20 pt-10 border-t border-gray-200 dark:border-gray-700">
           <h2 class="text-2xl md:text-3xl font-bold text-center text-gray-900 dark:text-white mb-8">
             Past Events
           </h2>
           <ul class="space-y-4 max-w-2xl mx-auto">
             {pastEvents.map(event => (
               <li class="text-center">
                 <a href={`/events/${event.slug}`} class="text-gray-700 dark:text-gray-300 hover:text-blue-700 dark:hover:text-blue-500 transition duration-300">
                   {event.name} - {formatDate(event.date)}
                 </a>
               </li>
             ))}
           </ul>
        </div>
      )}

    </div>
  </section>
</MainLayout>
