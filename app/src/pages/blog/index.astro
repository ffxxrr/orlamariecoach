---
// src/pages/blog/index.astro
// import { getCollection } from 'astro:content'; // No longer using content collections here
import MainLayout from '../../layouts/MainLayout.astro';
import BlogCard from '../../components/blog/BlogCard.astro';
import { connectToDatabase } from '../../utils/db/connect.js';
import BlogPost from '../../utils/db/models/BlogPost.js';

let dbPosts = [];
try {
  await connectToDatabase();
  // Fetch all published blog posts from MongoDB
  // TODO: Add a 'status' field to BlogPost model later to filter only 'published' posts
  const allPostsFromDb = await BlogPost.find({}) // Add filter like { status: 'published' } later
    .sort({ pubDate: -1 }) // Sort by publication date, newest first
    .lean(); // Use .lean() for better performance if not modifying docs

  // Adapt the structure to match what BlogCard expects (data property)
  // Also ensure necessary fields are present
  dbPosts = allPostsFromDb.map(post => ({
    id: post._id.toString(), // Pass ID if needed by card/link
    slug: post.slug, // Pass slug for linking
    data: {
      title: post.title,
      description: post.description,
      pubDate: post.pubDate,
      image: post.image,
      category: post.category,
      // Add other fields expected by BlogCard if necessary
    }
  }));

} catch (error) {
  console.error("Error fetching blog posts from DB:", error);
  // Handle error appropriately, maybe show an error message
}


const pageTitle = "OrlaMarie Coach Blog";
const pageDescription = "Insights, tips, and resources on personal growth, career development, and achieving your goals.";
---

<MainLayout title={pageTitle} description={pageDescription}>
  <div class="container mx-auto px-4 py-8 lg:py-16">
    <header class="mb-8 lg:mb-12 text-center">
      <h1 class="text-3xl lg:text-4xl font-extrabold text-gray-900 dark:text-white mb-4">
        {pageTitle}
      </h1>
      <p class="text-lg font-light text-gray-500 dark:text-gray-400">
        {pageDescription}
      </p>
    </header>

    {dbPosts.length > 0 ? (
      <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
        {dbPosts.map((post) => (
          <BlogCard post={post} /> // Pass the adapted post object
        ))}
      </div>
    ) : (
      <p class="text-center text-gray-500 dark:text-gray-400">
        No blog posts found yet. Check back soon!
      </p>
    )}

    {/* TODO: Add pagination if there are many posts */}
  </div>
</MainLayout>
