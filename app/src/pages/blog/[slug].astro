---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import { Image } from 'astro:assets'; // Use Astro's Image component

// Generate static paths for each blog post
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the specific blog entry for this page
const { entry } = Astro.props;
const { Content } = await entry.render(); // Render the Markdown content
const post = entry.data;

// Format the date
const formattedDate = new Date(post.pubDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<MainLayout title={post.title} description={post.description}>
  <div class="container mx-auto px-4 py-8 lg:py-16">
    <article class="prose dark:prose-invert max-w-3xl mx-auto">
      {post.image && (
        <Image
          src={post.image}
          alt={post.title}
          width={1000}
          height={500}
          format="webp"
          class="mb-6 rounded-lg shadow-md w-full object-cover h-64 md:h-80"
        />
      )}
      <h1 class="text-3xl md:text-4xl font-extrabold mb-2">{post.title}</h1>
      <p class="text-gray-500 dark:text-gray-400 text-sm mb-6">
        Published on {formattedDate}
        {post.category && ` in ${post.category}`}
      </p>

      {/* Render the main blog content from Markdown */}
      <div class="text-gray-800 dark:text-gray-200">
        <Content />
      </div>

      {/* Optional: Add related posts or comments section later */}
      <div class="mt-12 border-t pt-6">
        <a href="/blog" class="text-primary-600 hover:underline dark:text-primary-400">
          &larr; Back to Blog
        </a>
      </div>
    </article>
  </div>
</MainLayout>
